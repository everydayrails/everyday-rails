---
layout: post
title: "Trees and taxonomies with Ancestry"
excerpt: "Ancestry is a new gem for adding tree structures to content in your Rails applications."
---

[Ancestry](https://github.com/stefankroes/ancestry) is a handy gem for building tree structures or taxonomies in your Rails applications. It's similar to the likes of the [acts_as_tree](https://github.com/rails/acts_as_tree) plugin (see the [Railscasts tutorial](http://railscasts.com/episodes/162-tree-based-navigation)). The [project wiki](https://github.com/stefankroes/ancestry/wiki) has several ideas for ways to put Ancestry to use; in this post I'll cover a couple of basic uses to get you rolling with some common applications of the gem.

h3. Installation

Follow the instructions provided in Ancestry's README to add it to your application. It's very straightforward: Install the gem, generate and run a migration, and add <code>has_ancestry</code> to any model you'd like to turn into a tree. For example, you might have a hierarchy of categories; once you've installed Ancestry this can be created with 

{% highlight ruby %}
  # app/models/category.rb

  class Category < ActiveRecord::Base
    has_ancestry
    
    # rest of model
  end
{% endhighlight %}

h3. Built-in functionality

The nice thing about Ancestry is how easy it makes it to work with a given object in your tree, its parents, and its children. It does this through more than 20 useful instance methods and several scopes. Among the ones you may want to start with:

* *Roots:* To get a collection of the Category taxonomy's top-level nodes, just call <code>Category.roots</code>.
* *Children:* Pretty straightforward; <code>@category.children</code> gives you a collection of a given category's subcategories.
* *Ancestors:* A category's ancestry&mdash;its parent, grandparent, and on back&mdash;is accessible with <code>@category.ancestors</code>.
* *Parent:* You've probably guessed it; <code>@category.parent</code> will give you the category's parent category. Useful if you want to include a back link in your view.

h3. Breadcrumbs

A practical use of Ancestry is to help visitors navigate your site through breadcrumbs. This is easy to add to your view:

{% highlight haml %}
  # app/views/category.show.haml

  %div#breadcrumbs
    = link_to 'Home', categories_url
    &gt;
    - @category.ancestors.each do |a|
      = link_to a.name, a
      &gt;
{% endhighlight %}

That's all there is to it to help your site visitors navigate your content more easily.